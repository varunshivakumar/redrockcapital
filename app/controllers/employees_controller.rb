
class EmployeesController < ApplicationController
  include Helper
  def employee_home

    @employee = Employee.find(params[:id])
    @employee = Employee.all

    # @test = Employee.where(id: params[:id]) if params[:id].present?

    @employee  = @employee.search(params[:search]) if params[:search].present?

    # Employee:(1)
    # Record an order
    # TODO: functionality for approving/disapproving an order
    # TODO: Add a list of past/current/pending orders

    # Employee:(3)
    # Produce customer mailing lists
    @emails = mailing_list_employee(@employee.id)

    # Employee:(4)
    # Produce a list of stock suggestions for a given customer (same as client/side)
    # Call 'stock_suggestions_client(client.id)' for each client
  end

  def manager_home
    # Manager:(3)
    # Obtain a sales report for a particular month
    start_date = Date.today.beginning_of_month
    end_date = Date.today
    @sales_report = Order.where("created_at > ?", 30.days.ago) # list of orders in the month

    # Manager:(5)
    # Produce a summary listing of revenue generated by a particular stock, stock_type, or customer
    # stock_revenue(stock_symbol): revenue generated by a particular stock
    # stock_type_revenue(stock_type): add revenue generated by a particular stock_type
    # TODO: add revenue generated by a particular customer

    # Manager:(7)
    # Determine which employee generated the most total revenue

    # Manager:(8)
    # Determine which customer generated the most total revenue
  end

  def update

  end
end
